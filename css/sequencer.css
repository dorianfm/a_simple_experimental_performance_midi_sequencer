* {
    box-sizing: border-box;
}

@font-face {
    font-family: "Noto Emoji";
    src: url('../fonts/NotoEmoji-VariableFont_wght.ttf')  format('truetype');
}

@font-face {
    font-family: "Fredoka";
    src: url('../fonts/Fredoka-Light.ttf')  format('truetype');
	font-weight: 300;
}
   
@font-face {
    font-family: "Fredoka";
    src: url('../fonts/Fredoka-Regular.ttf')  format('truetype');
	font-weight: 400;
}

@font-face {
    font-family: "Fredoka";
    src: url('../fonts/Fredoka-Medium.ttf')  format('truetype');
	font-weight: 500;
}

@font-face {
    font-family: "Fredoka";
    src: url('../fonts/Fredoka-SemiBold.ttf')  format('truetype');
	font-weight: 600;
}

@font-face {
    font-family: "Fredoka";
    src: url('../fonts/Fredoka-Bold.ttf')  format('truetype');
	font-weight: 700;
}


:root {
    --background-rgb: 107, 113, 107;
    --background: rgb(var(--background-rgb));
    --header-background: rgb(87,93,87);
    --footer-background: var(--header-background);
    --foreground: rgb(0, 0, 0);
    --not-quite-foreground: rgb(200, 200, 200);
    --really-not-foreground: rgb(173, 173, 173);
    --almost-background: rgb(163, 167, 163);
    --field-background-rgb: 242, 242, 242;
    --field-background: rgb(var(--field-background-rgb));
	--nav-background: var(--header-background);
    --link: rgb(255, 255, 255);
    --visited: rgb(205, 205, 205);
    --active: rgb(207, 86, 0);
    --focus: var(--active);
    --error: rgb(127, 40, 40);
	--accent: rgb(144, 0, 120);

	--navigation-height: 55px;
    --margin: 1rem;
    --half-margin: calc(var(--margin) / 2);
	--margin-1-2: calc(var(--margin) / 2);
	--margin-1-4: calc(var(--margin) / 4);

    --double-margin: calc(var(--margin) * 2);
    --quad-margin: calc(var(--margin) * 4);
	--margin-2: calc(var(--margin) * 2);
    --margin-4: calc(var(--margin) * 4);
    --gutter: var(--margin);

    --line-length: 40rem;
    --line-height: 1.34;
	--font-size: 0.85rem;
}



@media screen and (prefers-color-scheme: light) {
	:root {
		--background-rgb: 230, 230, 230;
		--background: rgb(var(--background-rgb));
		--header-background: #d2d2d2;
		--footer-background: var(--header-background);
		--foreground: #4A4A4A;
		--not-quite-foreground: #5a5a5a;
		--not-foreground: #777777;
		--really-not-foreground: #999999;
		--almost-background: #cccccc;
		--field-background-rgb: 242, 242, 242;
		--field-background: rgb(var(--field-background-rgb));
		--link: #3A3A3A;
		--visited: #5A5A5A;
	}
}

@media screen and (prefers-color-scheme: dark) {
	:root {
		--background-rgb: 107, 113, 107;
		--background: rgb(var(--background-rgb));
		--header-background: rgb(87,93,87);
		--footer-background: var(--header-background);
		--foreground: #dddddd;
		--not-quite-foreground: #c8c8c8;
		--not-foreground: #b0b0b0;
		--really-not-foreground: #adadad;
		--almost-background: #a3a7a3;
		--field-background-rgb: 242, 242, 242;
		--field-background: rgb(var(--field-background-rgb));
		--link: #ffffff;
		--visited: #cdcdcd;
	}
}

body {
	background: var(--background);
    margin: 0;
    padding: 0;
    font-family: "Fredoka", helvetica, sans-serif;
    font-size: var(--font-size);
	line-height: var(--line-height);
	letter-spacing: 0.07rem;
	font-weight: 200;
    color: var(--foreground);
    /* accent-color: var(--accent); */
    padding-top: calc(3rem + 1px);
    min-height: 100svh;
    min-width: 100svw;
    display: flex;
	text-transform: lowercase;
}

* {
	font-size: var(--font-size);
	text-transform: lowercase;
	letter-spacing: 0.07rem;

}


button,
input,
select,
textarea { 
    margin: 0;
    border-radius: 0;
    border: 1px solid var(--foreground);
    color: var(--foreground);
    background: none;
	font-family: "Fredoka", helvetica, sans-serif;
}

button {
    line-height: 1rem;
}

button.icon {
    font-family: 'Noto Emoji';
    font-size: 150%;
    line-height: 1rem;
}

button:active,
button:hover {
    background: var(--foreground);
    color: var(--background);
}

button:disabled {
    opacity: 0.25;
    pointer-events: none;
}

*:focus-visible {
    background: var(--focus) !important;
    --background: var(--focus) !important;
    outline-offset: 0;
    border-color: var(--focus);
    outline: 1px solid var(--focus);
}

input[type="checkbox"] {
    width: 1rem;
    height: 1rem;
}

.field-group {
	white-space: nowrap;
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;
	column-gap: 0.25rem;
}

.field-group + .field-group {
	border-left: 1px dotted var(--foreground);
	padding-left: 0.5rem;
}

.controls {
    display: flex;
    position: fixed;
    white-space: nowrap;
    z-index: 10;
    max-width: 100%;
    top: 0;
    left: 0;
    right: 0;
    background: var(--background);
    height: calc(3rem + 3px);
    padding: 0.5rem;
    border-bottom: 3px solid var(--foreground);
    justify-content: space-between;
    column-gap: 1rem;
}

.controls > div {
    display: flex;
    white-space: nowrap;
    justify-content: space-between;
    column-gap: 0.5rem;
}


.controls button,
.controls input,
.controls select {
    height: 2rem;
    min-width: 2rem;
    padding: 0 0.3rem;
}

.controls button[value="undo"] {

    -moz-transform: scaleX(-1) scaleY(-1);
    -webkit-transform: scaleX(-1) scaleY(-1);
    -o-transform: scaleX(-1) scaleY(-1);
    transform: scaleX(-1) scaleY(-1);
	font-size: 1.45rem;
}

.controls button[value="redo"] {

    -moz-transform: scaleY(-1);
    -webkit-transform: scaleY(-1);
    -o-transform: scaleY(-1);
    transform: scaleY(-1);
	font-size: 1.45rem;
}

.controls button[value="settings"] {
	font-size: 1.5rem;
	display: none;
}

.controls button[value="information"] {
	font-size: 1.3rem;
}

.controls input[name="stateOffset"] {
    width: 4ch;
    text-align: right;
    padding: 0;
    border-color: var(--background);
}


.project .controls button[value="pause"]
{
    display: none;
}

.project.playing .controls button[value="play"]
{
    display: none;
}

.project.playing .controls button[value="pause"]
{
    display: inline-block;
}

.hidden {
    display: none;
}

.overlay {
	position: fixed;
	top: 3rem;
	padding: 1rem;
	bottom: 0;
	left: 0;
	right: 0;
	overflow: auto;
	z-index: 5;
	background: var(--background);
	display: none;
}

.overlay.visible {
	display: block;
}

.overlay .body {
	max-width: 40rem;
	margin: 0 auto;
	line-height: 1.4;
}

.overlay .body > :first-child {
	margin-top: 0;
}

.track > .config select[name="key"],
.track > .config select[name="root"],
.track > .config select[name="octave"],
.track > .config select[name="range"] {
	display: none;
}


.tracks {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    margin: 0;
    padding: 0;
    width: 100%;
    list-style: none;
    counter-reset: list;
    list-style-position: inside;
    justify-content: flex-start;
}

.tracks *:first-child:last-child > .functions button[value="remove"],
.tracks *:first-child:last-child > .header .functions button[value="remove"] {
    pointer-events: none;
    opacity: 0.25;
}

.track {
    height: 100%;
    margin-right: -2px;
}

.track .header {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: center;
    column-gap: 1rem;
    padding: 0.25rem 0.5rem 0.25rem 2rem;
    height: 2rem;
    border-right: 2px solid var(--foreground);
    background: none;
}

.track .header > * {
	white-space: nowrap;
}

.track .header .functions {
    text-align: right;
}

.track .header button {
    background: var(--background);
}

.track .header select {
    width: 5rem;
}

.track .header select[name="channel"] {
	width: 2.5rem;
}

li.track {
    counter-increment: list;
    position: relative;
}

li.track::before {
    background: black;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    width: calc(1.5rem + 2px);
    height: 2rem;
    content: counter(list, decimal);
}

.track > .functions {
    display: flex;
    padding: 0.5rem;
    column-gap: 0.5rem;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: stretch;
}

.patterns {
    margin:  0;
    padding: 0;
}

.pattern {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    border: 2px solid var(--foreground);
    min-height: 4rem;
    margin: 0;
    overflow: hidden;
    background: var(--background);
	position: relative;
}

.pattern + .pattern {
    margin-top: -2px;
}

.pattern > .functions {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    align-items: center;
    align-content: stretch;
    border-left: 2px solid var(--foreground);
	order: 3;
}

.pattern > .config input[name="active"] {
	position: absolute;
	top: 0.3rem;
	left: 0.2rem;
}

.pattern > .functions button {
    margin:-1px;
    width: 1.5rem;
    flex-grow: 2;
}

.steps {
    margin: 0;
    width: 100%;
    padding: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    flex-wrap: nowrap;
    overflow: hidden;
    margin: -1px -1px -1px 0;
}

.step {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    border: 1px dotted var(--foreground);
    height: 2rem;
    margin-top: -1px;
    column-gap: 0.5rem;
}

.step.playing {
    background-color: yellow;
}

.functions button {
    border: 1px dotted var(--foreground);
    width: 1.5rem;
}

.track .config:has(input[name="active"]:not(:checked)) + .patterns .pattern > * {
	opacity: 0.25;
}

.pattern > .config:has(input[name="active"]:not(:checked)) ~ * {
	opacity: 0.25;
}

.step input[name="active"]:not(:checked) ~ *,
.step input[name="trigger"]:not(:checked) ~ * {
	opacity: 0.25;
}

.step input[type="range"] {
    width: 8rem;
} 

.range-value {
	font-variant-numeric: tabular-nums;
	width: 6ch;
	letter-spacing: 0;
	display: inline-block;
	text-align: right;
	border: 0;
	background: inherit;
	font: inherit;
}

.step input[name="note"] {
	width: 16rem;
}



.pattern .handle {
    background: url('../img/ht-50.gif');
    width: 1.5rem;
    cursor: move;
    border: 0px;
    border-right: 2px solid var(--foreground);
    margin-right: -1px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: calc(100% + 4px);
    height: auto;
    max-height: none;
}

.step .handle {
    background: url('../img/ht-25.gif');
    border: 1px solid var(--foreground);
    margin: -1px;
    min-height: 100%;
}

.step .config {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    column-gap: 0.5rem;
    padding: 0.25rem 0;
}


.step .functions {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    column-gap: 0;
    margin-left: auto;
    margin-right: 0;
    padding: 0;
}

.step .functions button {
    margin: 0 -1px 0 0;
    border-width: 0 1px;
    height: 100%;
}

.dragging {
    opacity: 0.25;
    /* display: none; */
}

.dragTargetAbove {
    margin-top: 2rem;
}

.dragTargetBelow {
    margin-bottom: 2rem;
}

code {
	background-color: lightgrey;
	padding: 0.1rem 0.25rem;
}

pre code {
	padding: 0.25rem 0.5rem;
	display: block;
}